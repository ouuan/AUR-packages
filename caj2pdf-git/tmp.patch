diff --git a/cajparser.py b/cajparser.py
index 393dc58..053a16c 100644
--- a/cajparser.py
+++ b/cajparser.py
@@ -154,9 +154,9 @@ class CAJParser(object):
         pdf_length = pdf_end - pdf_start
         caj.seek(pdf_start)
         pdf_data = b"%PDF-1.3\r\n" + caj.read(pdf_length) + b"\r\n"
-        with open("pdf.tmp", 'wb') as f:
+        with open("/tmp/caj2pdf.tmp", 'wb') as f:
             f.write(pdf_data)
-        pdf = open("pdf.tmp", "rb")
+        pdf = open("/tmp/caj2pdf.tmp", "rb")
 
         # deal with disordered PDF data
         endobj_addr = fnd_all(pdf, b"endobj")
@@ -224,9 +224,9 @@ class CAJParser(object):
             catalog_obj_no, root_pages_obj_no), "utf-8")
         pdf_data += catalog
         pdf.close()
-        with open("pdf.tmp", 'wb') as f:
+        with open("/tmp/caj2pdf.tmp", 'wb') as f:
             f.write(pdf_data)
-        pdf = open("pdf.tmp", "rb")
+        pdf = open("/tmp/caj2pdf.tmp", "rb")
 
         # Add Pages obj and EOF mark
         # if root pages object exist, pass
@@ -238,9 +238,9 @@ class CAJParser(object):
                 root_pages_obj_no, kids_str, self.page_num)
             pdf_data += bytes(pages_str, "utf-8")
             pdf.close()
-            with open("pdf.tmp", 'wb') as f:
+            with open("/tmp/caj2pdf.tmp", 'wb') as f:
                 f.write(pdf_data)
-            pdf = open("pdf.tmp", "rb")
+            pdf = open("/tmp/caj2pdf.tmp", "rb")
         # deal with multiple missing pages objects
         if multi_pages_obj_missed:
             kids_dict = {i: [] for i in top_pages_obj_no}
@@ -279,20 +279,20 @@ class CAJParser(object):
                 pdf_data += bytes(pages_str, "utf-8")
         pdf_data += bytes("\n%%EOF\r", "utf-8")
         pdf.close()
-        with open("pdf.tmp", 'wb') as f:
+        with open("/tmp/caj2pdf.tmp", 'wb') as f:
             f.write(pdf_data)
 
         # Use mutool to repair xref
         try:
-            check_output(["mutool", "clean", "pdf.tmp", "pdf_toc.pdf"], stderr=STDOUT)
+            check_output(["mutool", "clean", "/tmp/caj2pdf.tmp", "/tmp/caj2pdf_toc.pdf"], stderr=STDOUT)
         except CalledProcessError as e:
             print(e.output.decode("utf-8"))
             raise SystemExit("Command mutool returned non-zero exit status " + str(e.returncode))
 
         # Add Outlines
-        add_outlines(self.get_toc(), "pdf_toc.pdf", dest)
-        os.remove("pdf.tmp")
-        os.remove("pdf_toc.pdf")
+        add_outlines(self.get_toc(), "/tmp/caj2pdf_toc.pdf", dest)
+        os.remove("/tmp/caj2pdf.tmp")
+        os.remove("/tmp/caj2pdf_toc.pdf")
 
     def _convert_hn(self, dest):
         caj = open(self.filename, "rb")
@@ -402,11 +402,11 @@ class CAJParser(object):
         if (len(image_list) == 0):
             raise SystemExit("File is pure-text HN; cannot convert to pdf")
         pdf_data = convert_ImageList(image_list)
-        with open('pdf_toc.pdf', 'wb') as f:
+        with open("/tmp/caj2pdf_toc.pdf", 'wb') as f:
             f.write(pdf_data)
         # Add Outlines
-        add_outlines(self.get_toc(), "pdf_toc.pdf", dest)
-        os.remove("pdf_toc.pdf")
+        add_outlines(self.get_toc(), "/tmp/caj2pdf_toc.pdf", dest)
+        os.remove("/tmp/caj2pdf_toc.pdf")
 
     def _text_extract_hn(self):
         if (self._TOC_NUMBER_OFFSET > 0):
